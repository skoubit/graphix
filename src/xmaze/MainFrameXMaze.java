
package xmaze;

import graphix.Util;
import graph.Node;
import graph.MazeGraph;
import graph.Edge;
import algorithms.SearchAlgorithmDialog;
import algorithms.HeuristicSearch;
import algorithms.DepthFirstSearch;
import algorithms.BreadthFirstSearch;
import edu.uci.ics.jung.io.GraphMLWriter;
import java.io.File;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.Collection;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;


/**
 * ΕΑΠ - ΠΛΗ31 - 4η ΕΡΓΑΣΙΑ 2015-2016
 * @author Tsakiridis Sotiris
 */
public class MainFrameXMaze extends javax.swing.JFrame {

    // Σταθερές ονομασίες την τρέχουσα προβολή (panel)
    private static final int MAZEVIEW = 0;      // λαβύρινθος
    private static final int GRAPHVIEW = 1;     // γράφημα
    private static final int GRAPHDIAGVIEW = 2; // γράφημα με διαγώνιες ακμές
    
    private int currentView = MAZEVIEW;
    
    
    // Το panel του maze και του graph
    MazePanel mazePanel;
    MazeGraphPanel mazeGraphPanel;
    
    /**
     * Creates new form mainFrame
     */
    public MainFrameXMaze() {
        
        initComponents();
        
        // Create panels
        mazePanel = new MazePanel(693, 545);
        mazeGraphPanel = new MazeGraphPanel();
        
        // Default προβολή του mazePanel
        cardPanel.removeAll();
        cardPanel.add(mazePanel);
        cardPanel.repaint();
        cardPanel.revalidate();
        pack();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cardPanel = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        mazeMenu = new javax.swing.JCheckBoxMenuItem();
        graphMenuNoDiag = new javax.swing.JCheckBoxMenuItem();
        graphMenuWithDiag = new javax.swing.JCheckBoxMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenu7 = new javax.swing.JMenu();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("© ΕΑΠ 2016 -  ΠΛΗ31 - ΤΣΑΚΙΡΙΔΗΣ ΣΩΤΗΡΙΟΣ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 623, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        cardPanel.setLayout(new java.awt.CardLayout());

        jMenu1.setText("Αρχείο");

        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/open.png"))); // NOI18N
        jMenuItem3.setText("Άνοιγμα");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/save.png"))); // NOI18N
        jMenuItem2.setText("Αποθήκευση");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);
        jMenu1.add(jSeparator1);

        jMenuItem4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/exit.png"))); // NOI18N
        jMenuItem4.setText("Έξοδος");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Προβολή");

        buttonGroup1.add(mazeMenu);
        mazeMenu.setSelected(true);
        mazeMenu.setText("Λαβύρινθος (Maze40)");
        mazeMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mazeMenuActionPerformed(evt);
            }
        });
        jMenu2.add(mazeMenu);

        buttonGroup1.add(graphMenuNoDiag);
        graphMenuNoDiag.setText("Γράφημα (JUNG) χωρίς διαγώνειες ακμές");
        graphMenuNoDiag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graphMenuNoDiagActionPerformed(evt);
            }
        });
        jMenu2.add(graphMenuNoDiag);

        buttonGroup1.add(graphMenuWithDiag);
        graphMenuWithDiag.setText("Γράφημα (JUNG) με διαγώνειες ακμές");
        graphMenuWithDiag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graphMenuWithDiagActionPerformed(evt);
            }
        });
        jMenu2.add(graphMenuWithDiag);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Αλγόριθμοι");

        jMenu4.setText("Αναζήτηση κατά βάθος (DFS)");

        jMenuItem1.setText("Χωρίς διαγώνιες κινήσεις");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem1);

        jMenuItem5.setText("Με διαγώνιες κινήσεις");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem5);

        jMenu3.add(jMenu4);

        jMenu5.setText("Αναζήτηση κατά πλάτος (BFS)");

        jMenuItem6.setText("Χωρίς διαγώνιες κινήσεις");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem6);

        jMenuItem7.setText("Με διαγώνιες κινήσεις");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem7);

        jMenu3.add(jMenu5);

        jMenu6.setText("Άπλιστη αναζήτηση");

        jMenuItem8.setText("Χωρίς διαγώνιες κινήσεις");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem8);

        jMenuItem9.setText("Με διαγώνιες κινήσεις");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu6.add(jMenuItem9);

        jMenu3.add(jMenu6);

        jMenu7.setText("Αναζήτηση Α*");

        jMenuItem10.setText("Χωρίς διαγώνιες κινήσεις");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem10);

        jMenuItem11.setText("Με διαγώνιες κινήσεις");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu7.add(jMenuItem11);

        jMenu3.add(jMenu7);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mazeMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mazeMenuActionPerformed

        if (currentView == MAZEVIEW) return;
        
        // Προβολή maze
        cardPanel.removeAll();
        cardPanel.repaint();
        cardPanel.revalidate();
        
        cardPanel.add(mazePanel);
        cardPanel.repaint();
        cardPanel.revalidate();
        
        currentView = MAZEVIEW;
        
        pack();
        
        

    }//GEN-LAST:event_mazeMenuActionPerformed

    private void graphMenuNoDiagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graphMenuNoDiagActionPerformed
        
        if (currentView == GRAPHVIEW) return;

        // Προβολή του graphPanel με γράφημα χωρίς διαγώνιες ακμές
        int[][] grid = mazePanel.getGrid();
        mazeGraphPanel.setGraph(grid, false);
        
        cardPanel.removeAll();
        cardPanel.add(mazeGraphPanel);
        cardPanel.repaint();
        cardPanel.revalidate();
        
        currentView = GRAPHVIEW;
        
        pack();
        
        
    }//GEN-LAST:event_graphMenuNoDiagActionPerformed

    private void graphMenuWithDiagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graphMenuWithDiagActionPerformed
        
        if (currentView == GRAPHDIAGVIEW) return;

        // Προβολή του graphPanel με γράφημα με διαγώνιες ακμές
        int[][] grid = mazePanel.getGrid();
        mazeGraphPanel.setGraph(grid, true);
        
        cardPanel.removeAll();
        cardPanel.add(mazeGraphPanel);
        cardPanel.repaint();
        cardPanel.revalidate();
        
        currentView = GRAPHDIAGVIEW;
        
        pack();
        
    }//GEN-LAST:event_graphMenuWithDiagActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        
        // Μετατροπή του maze σε graph και αποθήκευση ως GraphML
        int[][] grid = mazePanel.getGrid();
        MazeGraph mg = new MazeGraph(grid, false);
        
        
        // Ανοίγουμε το παράθυρο επιλογής αρχείου
        // Φιλτράρουμε τα αρχεία .xml
        final JFileChooser fc = new JFileChooser();
        fc.setDialogTitle("Επιλογή αρχείου αποθήκευσης XML");
        FileNameExtensionFilter filter;
        filter = new FileNameExtensionFilter("Αρχεία XML", "xml");
        fc.setFileFilter(filter);
        
        int returnVal = fc.showSaveDialog(null);
        
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            
            File selectedFile = fc.getSelectedFile();
            
            // Αν δεν έχει κατάληξη .xml την προσθέτουμε
            if ( !selectedFile.getAbsolutePath().endsWith(".xml") )
                selectedFile = new File(selectedFile.getAbsolutePath() + ".xml");
            
            // Αν υπάρχει ήδη το αρχείο, μήνυμα ότι θα αντικατασταθεί
            if (selectedFile.exists()) {
                int result = JOptionPane.showConfirmDialog(null, 
                        "Το όνομα αρχείου υπάρχει ήδη.\nΘέλετε να αντικατασταθεί?",
                        "Το αρχείο υπάρχει ήδη", JOptionPane.YES_NO_OPTION);
                if (result != JOptionPane.YES_OPTION) return;
            }
            
            // Save the contents of Xml to selectedFile
            try {
                GraphMLWriter<Node, Edge> ml = new GraphMLWriter();
                FileWriter fw = new FileWriter(selectedFile);
                
                
                // Αποθηκεύουμε τα δεδομένα
                mg.saveToGraphML(ml);
                ml.save(mg, fw);
                fw.close();

            }
            catch(Exception e) {
                e.printStackTrace();
                
            }
            
        }
      

    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        
        MazeGraph mg = MazeGraph.load();
        
        
        // Αν προέκυψε κάποιο σφάλμα επιστρέφουμε
        if (mg == null) return;
        
        // Παίρνουμε τις διαστάσεις του maze
        int rows = mg.getMazeRows();
        int cols = mg.getMazeCols();
        
        // Δημιουργούμε ένα grid rows X cols
        // και δίνουμε σε όλα τα κελιά την τιμή OBST (εμπόδιο)
        int[][] grid = new int[rows][cols];
        for (int i=0; i<rows; i++)
            for (int j=0; j<cols; j++)
                grid[i][j] = MazeGraph.OBST;
        
        // Για κάθε κόμβο του γράφου, ανάλογα με τις συντεταγμένες του
        // και τις τιμές των startNode και targetNode δίνουμε την αντίστοιχη τιμή
        Collection<Node> nodes = mg.getVertices();
        int robotRow = 0;
        int robotCol = 0;
        int targetRow = 0;
        int targetCol = 0;
        
        for (Node node : nodes) {
            int row = node.getRow();
            int col = node.getCol();
                   
            if (node.isTargetNode()) {
                grid[row][col] = MazeGraph.TARGET;
                targetRow = row;
                targetCol = col;
            } 
            else if (node.isStartNode()) {
                grid[row][col] = MazeGraph.ROBOT;
                robotRow = row;
                robotCol = col;
            }
            else
                grid[row][col] = MazeGraph.EMPTY;
            
        }
        
        // Δημιουργούμε το Maze από το grid
        this.mazePanel.setGrid(grid, robotRow, robotCol, targetRow, targetCol);
        
        // Αν είμαστε σε graphPanel με ή χωρίς διαγώνιες κινήσεις
        // δημιουργούμε το ανάλογο γράφημα
        if (currentView == GRAPHVIEW) {
            mazeGraphPanel.setGraph(grid, false);
            cardPanel.repaint();
            cardPanel.revalidate();
        }
        if (currentView == GRAPHDIAGVIEW) {
            mazeGraphPanel.setGraph(grid, true);
            cardPanel.repaint();
            cardPanel.revalidate();
        }
       
        
        
        
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        
        // Μήνυμα επιβεβαίωσης και έξοδος
            int dialogResult = JOptionPane.showConfirmDialog (null, 
                "Θέλετε να κλείσετε την εφαρμογή?","Έξοδος",JOptionPane.YES_NO_OPTION);
            if(dialogResult == JOptionPane.YES_OPTION){
                System.exit( 0 );
            }
        
        
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed

        // Δημιουργούμε ένα MazeGraph object από το τρέχον
        // grid του maze με διαγώνιες κινήσεις
        int[][] grid = mazePanel.getGrid();
        MazeGraph mg = new MazeGraph(grid, true);

        // Ως ευρετικό η ευκλείδια απόσταση
        ArrayList<Node> targetNodes = mg.getTargetNodes();
        if (targetNodes.size() != 1)
        return;

        Node target = mg.getTargetNodes().get(0);

        for (Node n : mg.getVertices()) {
            n.setH(Util.eucledian(n, target));
            n.setF(n.getH());
        }

        // Δημιουργία και άνοιγμα του modal dialog
        HeuristicSearch astar = new HeuristicSearch(mg, HeuristicSearch.ASTAR);

        String title = "Αλγόριθμος αναζήτησης Α*";
        SearchAlgorithmDialog dlg = new SearchAlgorithmDialog(this, true, title, astar);
        dlg.setLocationRelativeTo(this);
        dlg.setVisible(true);

    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed

        // Δημιουργούμε ένα MazeGraph object από το τρέχον
        // grid του maze χωρίς διαγώνιες κινήσεις
        int[][] grid = mazePanel.getGrid();
        MazeGraph mg = new MazeGraph(grid, false);

        // Ως ευρετικό η απόσταση manhattan
        ArrayList<Node> targetNodes = mg.getTargetNodes();
        if (targetNodes.size() != 1)
        return;

        Node target = mg.getTargetNodes().get(0);

        for (Node n : mg.getVertices()) {
            n.setH(Util.manhattan(n, target));
            n.setF(n.getH());
        }

        // Δημιουργία και άνοιγμα του modal dialog
        HeuristicSearch astar = new HeuristicSearch(mg, HeuristicSearch.ASTAR);

        String title = "Αλγόριθμος αναζήτησης Α*";
        SearchAlgorithmDialog dlg = new SearchAlgorithmDialog(this, true, title, astar);
        dlg.setLocationRelativeTo(this);
        dlg.setVisible(true);

    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed

        // Δημιουργούμε ένα MazeGraph object από το τρέχον
        // grid του maze με διαγώνιες κινήσεις
        int[][] grid = mazePanel.getGrid();
        MazeGraph mg = new MazeGraph(grid, true);

        // Ως ευρετικό την ευκλείδιας απόστασης
        ArrayList<Node> targetNodes = mg.getTargetNodes();
        if (targetNodes.size() != 1)
        return;

        Node target = mg.getTargetNodes().get(0);

        for (Node n : mg.getVertices()) {
            n.setH(Util.eucledian(n, target));
            n.setF(n.getH());
        }

        // Δημιουργία και άνοιγμα του modal dialog
        HeuristicSearch greedy = new HeuristicSearch(mg, HeuristicSearch.GREEDY);

        String title = "Άπληστος αλγόριθμος αναζήτησης (Greedy)";
        SearchAlgorithmDialog dlg = new SearchAlgorithmDialog(this, true, title, greedy);
        dlg.setLocationRelativeTo(this);
        dlg.setVisible(true);

    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed

        // Δημιουργούμε ένα MazeGraph object από το τρέχον
        // grid του maze χωρίς διαγώνιες κινήσεις
        int[][] grid = mazePanel.getGrid();
        MazeGraph mg = new MazeGraph(grid, false);

        // Ως ευρετικό την απόσταση manhattan
        ArrayList<Node> targetNodes = mg.getTargetNodes();
        if (targetNodes.size() != 1)
        return;

        Node target = mg.getTargetNodes().get(0);

        for (Node n : mg.getVertices()) {
            n.setH(Util.manhattan(n, target));
            n.setF(n.getH());
        }

        // Δημιουργία και άνοιγμα του modal dialog
        HeuristicSearch greedy = new HeuristicSearch(mg, HeuristicSearch.GREEDY);

        String title = "Άπληστος αλγόριθμος αναζήτησης (Greedy)";
        SearchAlgorithmDialog dlg = new SearchAlgorithmDialog(this, true, title, greedy);
        dlg.setLocationRelativeTo(this);
        dlg.setVisible(true);

    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed

        // Δημιουργούμε ένα MazeGraph object από το τρέχον
        // grid του maze με διαγώνιες κινήσεις
        int[][] grid = mazePanel.getGrid();
        MazeGraph mg = new MazeGraph(grid, true);

        BreadthFirstSearch bfs = new BreadthFirstSearch(mg);

        // Δημιουργία και άνοιγμα του modal dialog
        String title = "Αλγόριθμος αναζήτησης κατά πλάτος (BFS)";
        SearchAlgorithmDialog dlg = new SearchAlgorithmDialog(this, true, title, bfs);
        dlg.setLocationRelativeTo(this);
        dlg.setVisible(true);

    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed

        // Δημιουργούμε ένα MazeGraph object από το τρέχον
        // grid του maze χωρίς διαγώνιες κινήσεις
        int[][] grid = mazePanel.getGrid();
        MazeGraph mg = new MazeGraph(grid, false);

        BreadthFirstSearch bfs = new BreadthFirstSearch(mg);

        // Δημιουργία και άνοιγμα του modal dialog
        String title = "Αλγόριθμος αναζήτησης κατά πλάτος (BFS)";
        SearchAlgorithmDialog dlg = new SearchAlgorithmDialog(this, true, title, bfs);
        dlg.setLocationRelativeTo(this);
        dlg.setVisible(true);

    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed

        // Δημιουργούμε ένα MazeGraph object από το τρέχον
        // grid του maze (με διαγώνιες κινήσεις)

        int[][] grid = mazePanel.getGrid();
        MazeGraph mg = new MazeGraph(grid, true);

        DepthFirstSearch dfs = new DepthFirstSearch(mg);

        // Δημιουργία και άνοιγμα του modal dialog
        String title = "Αλγόριθμος αναζήτησης κατά βάθος (DFS)";
        SearchAlgorithmDialog dlg = new SearchAlgorithmDialog(this, true, title, dfs);
        dlg.setLocationRelativeTo(this);
        dlg.setVisible(true);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed

        // Δημιουργούμε ένα MazeGraph object από το τρέχον
        // grid του maze.

        int[][] grid = mazePanel.getGrid();
        MazeGraph mg = new MazeGraph(grid, false);

        DepthFirstSearch dfs = new DepthFirstSearch(mg);

        // Δημιουργία και άνοιγμα του modal dialog
        String title = "Αλγόριθμος αναζήτησης κατά βάθος (DFS)";
        SearchAlgorithmDialog dlg = new SearchAlgorithmDialog(this, true, title, dfs);
        dlg.setLocationRelativeTo(this);
        dlg.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel cardPanel;
    private javax.swing.JCheckBoxMenuItem graphMenuNoDiag;
    private javax.swing.JCheckBoxMenuItem graphMenuWithDiag;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JCheckBoxMenuItem mazeMenu;
    // End of variables declaration//GEN-END:variables
}
