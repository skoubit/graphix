
package algorithms;


import edu.uci.ics.jung.algorithms.layout.Layout;
import edu.uci.ics.jung.algorithms.layout.StaticLayout;
import edu.uci.ics.jung.visualization.VisualizationViewer;
import edu.uci.ics.jung.visualization.control.DefaultModalGraphMouse;
import edu.uci.ics.jung.visualization.decorators.ToStringLabeller;
import edu.uci.ics.jung.visualization.renderers.Renderer;
import java.awt.BasicStroke;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Paint;
import java.awt.Stroke;
import java.awt.geom.Point2D;
import org.apache.commons.collections15.Transformer;
import graph.Edge;
import graph.Node;



/**
 * ΕΑΠ - ΠΛΗ31 - 4η ΕΡΓΑΣΙΑ 2015-2016
 * @author Tsakiridis Sotiris
 */
public class SearchAlgorithmDialog extends javax.swing.JDialog {

    VisualizationViewer vv = null;
    
    // Ο αλγόριθμος αναζήτησης κατά βάθος
    private SearchAlgorithm searchAlgorithm;
    
    /**
     * Creates new form NewJDialog
     * @param parent
     * @param modal
     * @param title
     * @param searchAlgorithm
     */
    public SearchAlgorithmDialog(java.awt.Frame parent, boolean modal, String title, SearchAlgorithm searchAlgorithm) {
        super(parent, modal);
        
        initComponents();
        
        // set title
        this.setTitle(title);
        
        // Κρατάμε το στιγμιότυπο του αλγορίθμου
        this.searchAlgorithm = searchAlgorithm;
        searchAlgorithm.setLogger(this.logTextArea);
        
        // Ενημερώνουμε τα radio buttons για το κριτήριο τερματισμού
        if (searchAlgorithm.getTerminationCriteria() == DepthFirstSearch.TARGET_INTO_OPEN_LIST)
            this.targetToOpenRadio.setSelected(true);
        else
            this.targetToCloseRadio.setSelected(true);
      
        drawGraph();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        graphPanel = new javax.swing.JPanel();
        treePanel = new javax.swing.JPanel();
        commandPanel = new javax.swing.JPanel();
        terminationCriteriaPanel = new javax.swing.JPanel();
        targetToOpenRadio = new javax.swing.JRadioButton();
        targetToCloseRadio = new javax.swing.JRadioButton();
        doButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        logPane = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        logTextArea = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Αλγόριθμος αναζήτησης κατά βάθος (DFS)");

        graphPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Χώρος αναζήτησης"));
        graphPanel.setLayout(new java.awt.CardLayout());

        treePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Δέντρο αναζήτησης")));
        treePanel.setLayout(new java.awt.CardLayout());

        terminationCriteriaPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Κριτίριο τερματισμού"));

        buttonGroup1.add(targetToOpenRadio);
        targetToOpenRadio.setText("Στόχος στις ανοικτές");
        targetToOpenRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                targetToOpenRadioActionPerformed(evt);
            }
        });

        buttonGroup1.add(targetToCloseRadio);
        targetToCloseRadio.setText("Στόχος στις κλειστές");
        targetToCloseRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                targetToCloseRadioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout terminationCriteriaPanelLayout = new javax.swing.GroupLayout(terminationCriteriaPanel);
        terminationCriteriaPanel.setLayout(terminationCriteriaPanelLayout);
        terminationCriteriaPanelLayout.setHorizontalGroup(
            terminationCriteriaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(terminationCriteriaPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(terminationCriteriaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(targetToOpenRadio)
                    .addComponent(targetToCloseRadio))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        terminationCriteriaPanelLayout.setVerticalGroup(
            terminationCriteriaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(terminationCriteriaPanelLayout.createSequentialGroup()
                .addComponent(targetToOpenRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                .addComponent(targetToCloseRadio))
        );

        doButton.setText("Έναρξη αναζήτησης");
        doButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doButtonActionPerformed(evt);
            }
        });

        resetButton.setText("Επαναφορά αναζήτησης");
        resetButton.setEnabled(false);
        resetButton.setMaximumSize(new java.awt.Dimension(129, 23));
        resetButton.setMinimumSize(new java.awt.Dimension(129, 23));
        resetButton.setPreferredSize(new java.awt.Dimension(129, 23));
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Χρωματισμοί"));

        jLabel1.setForeground(java.awt.Color.red);
        jLabel1.setText("Κόμβος έναρξης");

        jLabel2.setForeground(new java.awt.Color(64, 135, 43));
        jLabel2.setText("Κόμβοι-στόχοι");

        jLabel3.setForeground(new java.awt.Color(0, 0, 255));
        jLabel3.setText("Ανοικτές καταστάσεις");

        jLabel4.setText("Κλειστές καταστάσεις");

        jLabel5.setForeground(java.awt.Color.magenta);
        jLabel5.setText("Διεγραμμένοι κόμβοι");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addContainerGap())
        );

        javax.swing.GroupLayout commandPanelLayout = new javax.swing.GroupLayout(commandPanel);
        commandPanel.setLayout(commandPanelLayout);
        commandPanelLayout.setHorizontalGroup(
            commandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, commandPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(commandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(terminationCriteriaPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(doButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(resetButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        commandPanelLayout.setVerticalGroup(
            commandPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(commandPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(terminationCriteriaPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(doButton, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(resetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 197, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        logPane.setBorder(javax.swing.BorderFactory.createTitledBorder("Καταγραφή αναζήτησης"));

        logTextArea.setEditable(false);
        logTextArea.setColumns(20);
        logTextArea.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        logTextArea.setRows(5);
        jScrollPane1.setViewportView(logTextArea);

        javax.swing.GroupLayout logPaneLayout = new javax.swing.GroupLayout(logPane);
        logPane.setLayout(logPaneLayout);
        logPaneLayout.setHorizontalGroup(
            logPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1026, Short.MAX_VALUE)
        );
        logPaneLayout.setVerticalGroup(
            logPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, logPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE))
        );

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/return.png"))); // NOI18N
        jButton1.setText("Επιστροφή");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(logPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(graphPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(treePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 625, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(commandPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(graphPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(treePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(commandPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(logPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void targetToOpenRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_targetToOpenRadioActionPerformed

        if (this.targetToOpenRadio.isSelected()) {
            this.searchAlgorithm.setTerminationCriteria(DepthFirstSearch.TARGET_INTO_OPEN_LIST);
        }

    }//GEN-LAST:event_targetToOpenRadioActionPerformed

    private void targetToCloseRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_targetToCloseRadioActionPerformed

        if (this.targetToCloseRadio.isSelected()) {
            this.searchAlgorithm.setTerminationCriteria(DepthFirstSearch.TARGET_INTO_CLOSE_LIST);
        }

    }//GEN-LAST:event_targetToCloseRadioActionPerformed

    private void doButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doButtonActionPerformed

        if (searchAlgorithm.getState() == DepthFirstSearch.INIT) {
            searchAlgorithm.start();
            this.targetToOpenRadio.setEnabled(false);
            this.targetToCloseRadio.setEnabled(false);
            if (searchAlgorithm.getState() == DepthFirstSearch.FINISHED) {
                doButton.setEnabled(false);
            }
            doButton.setText("Επόμενο βήμα");
            resetButton.setEnabled(true);
        }
        else if (searchAlgorithm.getState() == DepthFirstSearch.RUNNING) {
            searchAlgorithm.step();
            if (searchAlgorithm.getState() == DepthFirstSearch.FINISHED) {
                doButton.setEnabled(false);
                drawGraph();
            }
        }
        
        drawTree();
               

    }//GEN-LAST:event_doButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed

        // Επαναδημιουργία του αντικειμένου του αλγορίθμου
        // ανάλογα με την κλάση
        if (searchAlgorithm instanceof DepthFirstSearch)
            searchAlgorithm = new DepthFirstSearch(searchAlgorithm.getSearchGraph());
        else if (searchAlgorithm instanceof BreadthFirstSearch)
            searchAlgorithm = new BreadthFirstSearch(searchAlgorithm.getSearchGraph());
        else if (searchAlgorithm instanceof HeuristicSearch) {
            HeuristicSearch hs = (HeuristicSearch)searchAlgorithm;
            searchAlgorithm = new HeuristicSearch(searchAlgorithm.getSearchGraph(), hs.getHeuristic());
            
        }
            
        
        // set logger
        this.searchAlgorithm.setLogger(this.logTextArea);
        
        // reset panel
        this.vv = null;
        

        // Ενημερώνουμε τα radio buttons για το κριτήριο τερματισμού
        if (searchAlgorithm.getTerminationCriteria() == DepthFirstSearch.TARGET_INTO_OPEN_LIST)
            this.targetToOpenRadio.setSelected(true);
        else
            this.targetToCloseRadio.setSelected(true);

        doButton.setText("Έναρξη αναζήτησης");
        doButton.setEnabled(true);
        resetButton.setEnabled(false);
        targetToOpenRadio.setEnabled(true);
        targetToCloseRadio.setEnabled(true);

        this.logTextArea.setText(null);
        
        treePanel.removeAll();
        treePanel.repaint();
        treePanel.revalidate();
        
        this.searchAlgorithm.getSearchGraph().resetSolutionPath();
        drawGraph();    // για καθαρισμό της διαδροής από προηγούμενο βήμα

    }//GEN-LAST:event_resetButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        /*
        // Μήνυμα επιβεβαίωσης και έξοδος
        int dialogResult = JOptionPane.showConfirmDialog (null,
            "Θέλετε να κλείσετε το παράθυρο αναζήτησης?","Επιστροφή",JOptionPane.YES_NO_OPTION);
        if(dialogResult == JOptionPane.YES_OPTION){
            this.dispose();
        }
        */
        
        this.dispose();

    }//GEN-LAST:event_jButton1ActionPerformed

    // Σχεδίαση του δέντρου με τα μέχρι τώρα δεδομένα
    private void drawTree() {
        /*
        JPanel vv = this.searchAlgorithm.getDefaultPanel();
        if (vv == null) return;
        */
        
        //TreeLayout tl = (TreeLayout)vv.getLayout();
        
        // Αν δεν υπάρχουν κόμβοι, επιστροφή
        if (this.searchAlgorithm.getVertexCount() == 0) return;
        
        if (vv == null) {
            vv = (VisualizationViewer)this.searchAlgorithm.getDefaultPanel();
            treePanel.removeAll();
            treePanel.add(vv);
            treePanel.repaint();
            treePanel.revalidate();
        }
        else {
            Layout<Node, Edge> tl = vv.getGraphLayout();
            tl.setGraph(searchAlgorithm);
            vv.repaint();
        }
       
 /*
        treePanel.removeAll();
        treePanel.add(vv);
        treePanel.repaint();
        treePanel.revalidate();
 */
    }
    
    // Επανασχεδίαση του γράφου αναζήτησης
    private void drawGraph() {
        
        Layout<Node, Edge> graphLayout = new StaticLayout(this.searchAlgorithm.getSearchGraph());
        //graphLayout.setSize(new Dimension(width, height));
        
        VisualizationViewer<Node, Edge> graphVV = new VisualizationViewer(graphLayout);
        DefaultModalGraphMouse<Node, Edge> graphMouse = new DefaultModalGraphMouse();
        graphVV.setGraphMouse(graphMouse);
        graphVV.setLayout(new BorderLayout());
        
        // Βρίσκουμε τις συντεταγμένες του πάνω αριστερά κόμβου
        double topX = 10000000.0;
        double topY = 10000000.0;
        for (Node n : searchAlgorithm.getSearchGraph().getVertices()) {
            double x = n.getX();
            double y = n.getY();
            if (x < topX) topX = x;
            if (y < topY) topY = y;
        }
        
        final double offsetX = topX;
        final double offsetY = topY;

        // Position vertices in a grid
        // Μετακίνηση πάνω αριστερά
        Transformer<Node, Point2D> locationTransformer = new Transformer<Node, Point2D>() {
            
            @Override
            public Point2D transform(Node node) {
                return new Point2D.Double(node.getX() - offsetX + 60, node.getY() - offsetY + 60);
            }
            
        };
        graphLayout.setInitializer(locationTransformer);
     
        
        // change vertex color
        Transformer<Node, Paint> nodePaint = new Transformer<Node, Paint>() {
        
            @Override
            public Paint transform(Node n) {
                
                // Αν είναι ο κόμβος έναρξη τον βάφουμε κόκκινο
                // Αν είναι κόμβος-στόχος, τον βάφουμε μπλε
                // Οι υπόλοιπο κόμβοι είναι άσπροι
                if (n.isStartNode()) return Color.RED;
                if (n.isTargetNode()) return Color.GREEN;
                
                // Αν είναι κόμβος που ανήκει στην διαδρομή - λύση -> κίτρινο
                if (searchAlgorithm.getSearchGraph().getSolutionNodes().contains(n)) return Color.YELLOW;
                
                // default
                return Color.WHITE;
            }
        };
        
        // Change Edge color (if into solution path)
        Transformer<Edge, Paint> edgePaint = new Transformer<Edge, Paint>() {
        
            @Override
            public Paint transform(Edge e) {
                
                // Αν η ακμή ανήκει στην διαδρομή-λύση -> κίτρινη
                // διαφορετικά μαύρη
                if (searchAlgorithm.getSearchGraph().getSolutionEdges().contains(e)) return Color.YELLOW;
                
                // default
                return Color.BLACK;
            
            };
            
        };
        
        // Change Edge thickness (if into solution path)
        Transformer<Edge, Stroke> edgeStroke = new Transformer<Edge, Stroke>() {
        
            @Override
            public Stroke transform(Edge e) {
                
                // Αν η ακμή ανήκει στην διαδρομή-λύση -> κίτρινη
                // διαφορετικά μαύρη
                if (searchAlgorithm.getSearchGraph().getSolutionEdges().contains(e)) {
                    return new BasicStroke(5);
                    
                }
                
                // default
                return new BasicStroke(1);
            
                
            
            }
        
        };
        
        
        graphVV.getRenderContext().setVertexFillPaintTransformer(nodePaint);
        graphVV.getRenderContext().setEdgeDrawPaintTransformer(edgePaint);
        graphVV.getRenderContext().setEdgeStrokeTransformer(edgeStroke);
        graphVV.getRenderContext().setVertexLabelTransformer(new ToStringLabeller());
        graphVV.getRenderer().getVertexLabelRenderer().setPosition(Renderer.VertexLabel.Position.NW);
         
  
        // update cardpanel
        graphPanel.removeAll();
        graphPanel.add(graphVV);
        graphPanel.repaint();
        graphPanel.revalidate();
 
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel commandPanel;
    private javax.swing.JButton doButton;
    private javax.swing.JPanel graphPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel logPane;
    private javax.swing.JTextArea logTextArea;
    private javax.swing.JButton resetButton;
    private javax.swing.JRadioButton targetToCloseRadio;
    private javax.swing.JRadioButton targetToOpenRadio;
    private javax.swing.JPanel terminationCriteriaPanel;
    private javax.swing.JPanel treePanel;
    // End of variables declaration//GEN-END:variables
}
